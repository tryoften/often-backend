{"version":3,"sources":["app/Services/ClientRequestDispatcher.js"],"names":[],"mappings":";;;;;;;;;;;;yCAA2B,+BAA+B;;;;oCACpC,0BAA0B;;;;qCACrB,0BAA0B;;;;IAE/C,uBAAuB;AACjB,UADN,uBAAuB,GACd;wBADT,uBAAuB;;AAE3B,MAAI,CAAC,cAAc,GAAG,4CAAoB,CAAC;AAC3C,MAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC3B,MAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,wCAAoB,CAAC;AACrD,MAAI,CAAC,SAAS,GAAG,uCAAe,CAAC;EACjC;;cANI,uBAAuB;;SAQrB,mBAAG;;;AACT,OAAI,CAAC,cAAc,CAAC,EAAE,CAAC,KAAK,EAAE,UAAC,eAAe,EAAK;;AAElD,QAAI,cAAc,GAAG,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAClE,UAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,UAAC,YAAY,EAAK;AACrD,SAAG,CAAC,MAAK,gBAAgB,CAAC,YAAY,CAAC,EAAC;AACvC,aAAO,CAAC,GAAG,CAAC,wDAAwD,GAAG,YAAY,CAAC,CAAC;MACrF,MAAM;AACN,aAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;AACtC,YAAK,gBAAgB,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AAC3E,aAAK,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;OACzB,CAAC,CAAC;MACH;KACD,CAAC,CAAC;IACH,CAAC,CAAC;GACH;;;QAvBI,uBAAuB;;;qBA0Bd,uBAAuB","file":"app/Services/ClientRequestDispatcher.js","sourcesContent":["import ClientRequests from '../Collections/ClientRequests';\nimport Responses from '../Collections/Responses';\nimport SpotifyService from './Spotify/SpotifyService';\n\nclass ClientRequestDispatcher {\n\tconstructor() {\n\t\tthis.clientRequests = new ClientRequests();\n\t\tthis.serviceProviders = {};\n\t\tthis.serviceProviders.spotify = new SpotifyService();\n\t\tthis.responses = new Responses();\n\t}\n\n\tprocess() {\n\t\tthis.clientRequests.on('add', (incomingRequest) => {\n\t\t\t//get a list of providers that the user is subscribed to\n\t\t\tvar user_providers = incomingRequest.get('user').get('providers');\n\t\t\tObject.keys(user_providers).forEach((providerName) => {\n\t\t\t\tif(!this.serviceProviders[providerName]){\n\t\t\t\t\tconsole.log(\"No service handlers found for the following provider: \" + providerName);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Provider handler found');\n\t\t\t\t\tthis.serviceProviders[providerName].execute(incomingRequest).then((resp) => {\n\t\t\t\t\t\tthis.responses.add(resp);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default ClientRequestDispatcher;"]}